package ir.fararayaneh.erp.data.models.tables.sync_tables;


import java.util.Date;

import io.realm.RealmObject;
import io.realm.annotations.PrimaryKey;
import ir.fararayaneh.erp.commons.CommonActivityState;
import ir.fararayaneh.erp.commons.CommonSyncState;
import ir.fararayaneh.erp.commons.Commons;
import ir.fararayaneh.erp.data.models.IModels;

/*
قوانین چت :
 چهار قانون زیر در تمام بندهای پس از آن موثر است



-----------------------------------------
(****) در سرور نود هیچ پیامی به  چند چت روم در آن واحد فرستاده نمیشود
 و همیشه در مقدار چت روم در روت فقط یک آی دی مینشیند
-----------------------------------------
(*)
تنها چت روم هایی به یوزر قابل نمایش است
که وضعیت اکتیویتی استیت آنها دیلیت نباشد
یا سینک استیت آنها
accessDenied
نباشد
و ضمنا
در زمان نمایش چت روم ها اگر سینک استیت آنها
beforeSync - onSync
باشد، علامت انتظار را نمایش میدهیم و اگر سینک استیت آنها
syncError
باشد،باید علامت تعجب نشان داد

در زمان چت روم ممبر دیلیت اگر خودم یوزر دیلیت شده هستم علاوه بر خروج از چت روم
اکتیویتی استیت چت روم مزیور را هم دیلیت میکنم (به حالت سینکد) و بنابراین آن چت روم را هم دیگر نمیبینم
تنها ممبر هایی به یوزر قابل نمایش است که اکتویتی استیت آنها دیلیت نیست و سینک استیت آنها سینکد باشد
-----------------------------------------
(**)
تنها چت روم هایی قابل ورود و یا قابل ویرایش است که وضعیت سینک آنها فقط سینک باشد
و اکتیویتی استیت آنها دیلیت نباشد

و ضمنا اکتیویتی کایند ما برای آن چت روم اکتیو باشد
(هرچند در زمان دی اکتیو کردن ما توسط دیگران (مثلا حذف ما توسط یوزر بالادست) اکتیویتی استیت
ممبر ما و چت روم ما
  تبدیل به دیلیت میشود تا با همان شرط باعث عدم نمایش چت روم شویم)
-----------------------------------------
(***)
اگر فرایندی در دیتابیس با ارور برخورد نمود باید
 علاوه بر پر کردن ارور و سینک ارور ، مقدار رسیور را پر کرد تا فقط به خود فرستنده برگردانده شود
-----------------------------------------
اضافه کردن چت روم
SYNCCHATROOMADD:

در زمان کلیک روی دکمه اضافه کردن چت روم
 (
 نکته اینجا این است که در زمان اضافه کردن چت روم هم
  باید یک رکورد به جدول چت روم و چند رکورد به جدول چت روم ممبر (از جدول جداگانه ای) اضافه نمود
 تفاوت این رکورد های موجود در جدول ممبر با شرایطی که داریم فقط ممبر به چت روم اضافه میکنیم این است
 که با اینکه اکتیویتی استیت هردو Add است اما یکی دارای چت روم ای دی است و دیگری دارای آن نیست
 )
 و یا
در زمان سینک معمولی جدول(SYNCCHATROOM)
اگر چت روم با اکتیویتی استیت ADD
که سینک استیت آنها سینکد یا اکسس دیناید نیست
باید کایند SYNCCHATROOMADD
را با استفاده از کلاس مدل
ChatroomAddSocketModel
ارسال کنیم و در زمان دریافت
در موبایل هم جدول چت روم و هم جدول ممبر ها را به روز نماییم
در زمان دریافت در سرور نود اگر از کلاینت دریافت میکنیم آنرا به دیتابیس بدهیم و یا با ارور برگردانیم
 (هم باید ارور موجود در روت را پر کرد و هم باید سینک استیت مربوط  به چت روم را اصلاح نمود
(سینک استیت مربوط به ممبر ها لازم نیست
 اصلاح شود چون رکورد های سینک نشده از روی جی یو آی دی چت روم پیدا میشوند و نه سینک استیت آنها )


و اگر از دیتابیس دریافت میکنیم و اگر فاقد ارور است
دیتا خود را اصلاح کند(چت روم جدید و اعضای آن را ایجاد نماید)
در غیر اینصورت
 فقط به یوزر آی دی درون رسیور آنرا برگرداند و
دیتا خود را نیز بدون تغییر نگه دارد
و سپس به همه اعضای چت روم آنرا برگرداند یا کش کند
  در دیتابیس اگر عملیات درست انجام شد چت روم آی دی موجود در روت
   و ای دی و سینک استیت و اولد ولیو موجود در چت روم
    و آیدی و چتروم آی دی و سینک استیت مربوط به ممبر ها پر شود ورسیور هم نال شود
 و اگر به ارور خورد ارور موجود در روت و رسیور موجود در روت و سینک استیت
 مربوط به چت روم و سینک استیت ممبر ها پر شود و چت روم درون روت هم نال باشد

در این کایند لازم به ارسال مسیج به صورت جداگانه نیست (به دلیل نداشتن چت روم آی دی)
لذا باید به محض دریافت نوتیفیکشن قابل رویت برای یوزر یجاد شود
-----------------------------------------
ویرایش چت روم
SYNCCHATROOM

(اسم و شرح چت روم یا عکس چت را فقط میشود تغییر داد،
در صورت که چت روم پرایوت نباشد و ادمین و یا یوزر پاور مربوط به گروه یا کانال باشد (سبد خرید نباشد) و قوانین * و ** هم رعایت شود)
در این صورت ما اکتیویتی استیت چت روم را تبدیل به
EDIT
کرده ,و باید با همان کایند
SYNCCHATROOM
ارسال نماییم
در سرور نود در زمان دریافت از سمت یوزر نباید چیزی چک شود
و باید همان رفتار همیشگی ارسال به دیتابیس یا برگرداندن ارور انجام شود
(حتی در زمان اکتیویتی استیت دیلیت هم در زمان دریافت از یوزر همین رفتار انجام میشود)
اما در زمان دریافت از سوی دیتابیس باید چک شود
که کلا اگر ارور داده شده است بدون هیچ تغییری برای یوزر موجود در رسیور ارسال شود
(قانون ***)
و اگر ارور نداریم و کایند ما
SYNCCHATROOM
و اکتیوتی استیت ما ادیت است
آنرا بدون تغییر در دیتابیس نود، برای اعضای چت روم ارسال نماییم


ضمنا همزمان با ویرایش چت روم و پس از انجام ان باید یک پ‍‍یام عمومی مناسب نیز به دیتابیس مسیج اضافه
 و برای سرور نیز ارسال شود
-----------------------------------------
حذف چت روم یا ترک کردن چت روم توسط ادمین
SYNCCHATROOM:


ما فقط ادمین گروه یا کانال یا سبد خرید باشیم
و شرایط * و ** برقرار باشد
و چت روم باید غیر پرایوت باشد
(چت روم پرایوت قابل حذف شدن نیست مگر جدول دوستان را داشته باشیم
و در سمت کلاینت امکان یونیون کرن این جدول با
 چت روم را داشته باشیم چون در حال حاضر چت روم های پرایوت هم درون جدول چت روم مینشیند)

در این صورت ما اکتیویتی استیت چت روم را تبدیل به
DELETE
کرده ,و باید با همان کایند
SYNCCHATROOM
ارسال نماییم
در سرور نود در زمان دریافت از سمت یوزر نباید چیزی چک شود
و باید همان رفتار همیشگی ارسال به دیتابیس یا برگرداندن ارور انجام شود
(حتی در زمان اکتیویتی استیت EDIT هم در زمان دریافت از یوزر همین رفتار انجام میشود)
اما در زمان دریافت از سوی دیتابیس باید چک شود
که کلا اگر ارور داده شده است بدون هیچ تغییری برای یوزر موجود در رسیور ارسال شود
(قانون ***)
و اگر ارور نداریم و کایند ما
SYNCCHATROOM
و اکتیوتی استیت ما دیلیت است
اگر رسیور آن خالی است
که حتما خالی است چون اگر ارور داشت در رسیور به دست ما میرسید و نه در چت روم.
ابتدا برای تمام یوزر ها ارسال نماییم
(که یا ارسال میشود یا کش میشود)
و سپس آن چت روم را از دیتای موجود در دیتابیس حذف نماییم
و اگر رسیور آن پر است
 (همان پکت دیلیت است که پس از فرآیند موفق دیلیت، از طرف دیتابیس اسکجول شده شده
 است تا با رسیورهای معادل اعضای چت روم،یک یا دو بار ارسال شود)
 بدون تغییر در دیتای سرور نود برای گیرندگان ارسال یا کش شود


 این پیام یک مسیج موازی با خود ندارد لذا باید به محض دریافت نوتیفیکیشن مناسب به یوزر نمایش داده شود


-----------------------------------------
بیزینس رفتار چت روم ها در زمان دریافت پکت که ممکن است به درد موبایل هم بخورد
عکس
123456.jpeg
----------------------------------------
SYNCCHATROOMMEMBERADD
اضافه کردن ممبر (ادمین میتواند پاور اضافه کند و پاور میتواند پابلیک اضافه نماید)

(فقط به شرطی که چت روم در استیت سینکد باشد در غیر این صورت نتواند ممبر اضافه کند .
 در سمت کلاینت هم در زمان دریافت \کت تنها به شرطی چت روم را اضافه کند که آنرا نداشته باشد
. چون چت روم موجود در پکت فقط به درد فرد اضافه شده به چت روم میخورد )
در زمان اضافه کردن عضو به چت روم موجود
 (که باید از جدول جداگانه ای
  صورت بپذیرد مثل لیست پیک موتوری یا هر جدولی که قابل اضافه کردن به چت روم است )
یا در زمان سینک عمومی، رکورد
هایی که سینک استیت آنها سینکد یا اکسس دیناید نیست  ولی دارای چت روم ای دی هستند
 (اگر چت روم ای دی ندارند مربوط به چت روم جدید هستند و نباید اینجا ارسال شوند)
   و اکتیویتی استیت آنها add است
  ارسال میشود
در سرور نود ،
 در حال دریافت از یوزر هستیم
آنرا به دیتابیس تحویل میدهیم یا با ارور به یوزر برگردانده و یا آنرا کش میکنیم
(در موبایل رکوردهایی که اکتیویتی استیت آنها Add است اما فاقد چت روم آی دی است با کایند SYNCCHATROOMADD برای سرور ارسال میشود)
اگر  از دیتابیس دریافت کردیم
اگر دارای ارور بودیم آنرا برای رسیور پر شده از سوی دیتابیس ارسال کرده و یا کش میکنیم
اگر فاقد ارور بود ابتدا یوزر مورد نظر را به چت روم اضافه میکنیم سپس دیتا را برای تمام اعضای چت روم ارسال و یا کش میکنیم

این رویداد یک مسیج موازی با خود نیز دارد که باید در جدول مسیج درج و برای سرور نیز ارسال شود

-----------------------------------------
SYNCCHATROOMMEMBER

حذف کردن ممبر (ادمین میتواند پاور و پابلیک حذف کند و
پاور میتواند پابلیک حذف نماید
 و هر یوزری میتواند خودش را حذف نماید(left)، اما اگر یوزر ادمین است باید با چت روم دیلیت رفتار شود )
و در ضمن باید مقدار اکتیویتی کایند را هم با
DEACTIVE_BY_USER
پر کرد.

در زمان حذف ممبر یا در زمان سینک عمومی رکورد
هایی که سینک استیت آنها سینکد یا اکسس دیناید نیست
  ولی دارای چت روم ای دی هستند (اگر چت روم ای دی ندارند مربوط به چت روم جدید هستند و نباید اینجا ارسال شوند)
     و اکتیویتی استیت آنها delete است

 ارسال میشود

در سرور نود ، اگر اکتیویتی استیت DELETE
است و در حال دریافت از یوزر هستیم
آنرا به دیتابیس تحویل میدهیم یا با ارور به یوزر برگردانده و یا آنرا کش میکنیم

اگر اکتیویتی استیت DELETE را از دیتابیس دریافت کردیم
اگر دارای ارور بودیم آنرا برای رسیور پر شده از سوی دیتابیس ارسال کرده و یا کش میکنیم
اگر فاقد ارور بود و رسیور ان خالی بود
ابتدا برای تمام اعضای چت روم آنرا ارسال کرده یا کش میکنیم و سپس دیتای سرور نود را اصلاح میکنیم
و اگر رسیور ان پر است مربوط به پکت اسکجول شده(برای اطمینان از دیلیت مورد نیاز) از سوی دیتا بیس است که رسیور آن معادل تمام اعضای چت روم است
و بدون ایجاد تغییر در سرور نود برای تمام رسیور ها ارسال میشود

این رویداد یک مسیج موازی با خود نیز دارد که باید در جدول مسیج درج و برای سرور نیز ارسال شود

اما در زمان گوش دادن به آن دقت شود که اگر ما یوزر حذف شده هستیم رفتار مناسب انجام شود
به این معنی که اکتیویتی استیت مربوط به جدول چت لیست را هم تبدیل به دیلیت کنم و سینک استیت ان را هم دیلیت کنم تا چت لیست به من نمایش داده نشود
و از ان چت لیست هم خارج شوم و نوتیفیکیشن مناسب هم ببینم
-----------------------------------------
SYNCCHATROOMMEMBER

بحث آنلاین و افلاین شدن و مدیریت نخوانده ها با پکت های دیگر هندل میشود فقط بحث تایپینگ است که مجدد باید به آن فکر نمود و بیزینس زیر راتغییر داد

 (لازم نیست در روت جیسون ارسالی توسط کلاینت مقدار چت روم آی دی پر شود در سرور نود پر میشود)

ویرایش ممبر
 (آن لاین یا آفلاین شدن یا اصلاح تعداد نخوانده ها(در ورود به چت روم)(فعلا برای نود ارسال نمیشود)
 یا تایپ کردن یا بی صدا کردن چت روم(فعلا یرای دیتابیس ارسال نمیشود و میرور میشود) که توسط همه اعضا انجام میشود)

در زمان ویرایش ممبر یا در زمان سینک عمومی رکورد
هایی که سینک استیت آنها سینکد یا اکسس دیناید نیست
  ولی دارای چت روم ای دی هستند (اگر چت روم ای دی ندارند مربوط به چت روم جدید هستند و نباید اینجا ارسال شوند)

و اکتیویتی استیت آنها edit است

ارسال میشود

در سرور نود ، اگر اکتیویتی استیت EDIT
است بدون تغییر در دیتابیس نود و بدون ارسال برای دیتابیس
سینک استیت آنرا تبدیل به سینکد کرده و انرا برای تمام اعضای چت روم ارسال نموده و یا آنرا کش میکنیم


این پیام یک مسیج موازی با خود ندارد


-----------------------------------------
SYNCMESSAGE

ایجاد پیام توسط همه میتواند انجام شود
دریافت پیام های قدیمی تر که
isOld 
آنها منفی یک است،  و نیز به جای چت روم آی دی مقدار رسیور انها در روت مقدار دارد
حذف پیام توسط همه میتواند انجام شود
حذف پیام برای همه، فقط توسط ادمین گروه یا کانال و در غیر از چت روم پرایوت میتواند انجام شود

در زمان اضافه کردن پیام و یا حذف پیام و یا در زمان سینک عمومی
رکورد
هایی که سینک استیت آنها سینکد یا اکسس دیناید نیست ارسال میشود

در سرور نود بدون توجه به استیت این پیام، برای دیتابیس ارسال و یا برای یوزر کش میشود
در دیتابیس اگر اکتیویتی استیت DELETE است اگر مقدار
 deleteForMe
 برابر با 1 است فقط پیام برای فرستنده و در غیر این صورت
 برای همه دیلیت شده و برای سرور نود بازگشت داده میشود
 به این ترتیب که اگر
 deleteForMe =1
 است بنابراین باید رسیور پر شود تا فقط برای فرستنده ارسال شود
 و اگر
 deleteForMe =0
 است بنابراین چتروم ای دی موجود در روت پر شود تا برای همه ارسال شود
 بنابراین در سمت کلاینت به محض دریافت
 activityState =delete
آن پیام میتواند برای یوزر حذف شود
 در صورت برخورد با ارور ضمن پرکردن ارور در روت و سینک ارور، رسیور را پر کرده و در اختیار سرور نود قرار میدهیم

 و سرور Node  با توجه به پر بودن رسیور و فیلد ارور آنرا برای فرستنده و یا برای تمام اعضای چت روم برمیگرداند

ضمنا هم در موبایل و هم در وب به محض دریافت پکت مسیج(اگر اولد نباشد) یا مسیج ادیت از یک یوزر باید استیت آن یوزر را آنلاین کنیم

بیزینس 
SYNCMESSAGEMORE
هم مطالعه شود
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
SYNCMESSAGEMORE
این کایند برای دریافت پیام های بیشتر در یک چت روم است و بادی آن فقط حاوی یک ای دی است(LoadMoreMessageModel) که آی دی قدیمی ترین پیام موجود در ان چت روم است
در زمان دریافت در سرور نود به اوراکل ارسال میشود و یا با خطا به همان کلاینت برگردانده میشود
در دریافت توسط کلاینت نباید هیچ کاری صورت پذیرد
در دریافت در اوراکل باید به تعداد پیام های درخواست شده در
pageItem
مسیج های مورد نیاز را ساخته و با سینک مسیج
به کلاینت مورد نظر (پس باید رسیور پر شود)
ارسال نماید

فقط دقت شود که پکت های مسیجی که در اینجا دریافت میشود بر خلاف پکت های مسیج دیگر
در روت خود چت روم ای دی ندارد
و در ورودی وب و موبایل به ان مقدار داده میشود
از سوی دیگر پارامتر
isOld ---> 1
نشان دهنده این مسیج ها است

در اینجا لازم نیست که یوزر مورد نظر آنلاین شود چون پیام قدیمی است
-------------------------------------------------------
SYNCMESSAGEEDIT

 یک پکت با مدل
 messageEditSocketModel
 ارسال میکنیم

ما دو پارامتر
unSeenCount
در ممبر و
seenDate (seenCount)
در مسیج داریم
که در سمت دیتابیس مقدار اولی با استفاده از دومی محاسبه میشود یعنی به تعداد پیام هایی که در مسیج رسیور داریم
و سین دیت آنها مقدار ندارد آن یوزر در آن چت روم پیام نخوانده ندارد
اما در سمت کلاینت مقدار اولیه پیام نخوانده از دیتابیس گرفته میشود و فقط لازم است به محض کلیلک روی آن چت روم مقدار آن در UI صفر شود
و البته در موبایل مقدار بج ها و
unseenCount
هم اصلاح شود
و SYNCMESSAGEEDIT
هم ارسال شود
 (حتما در روت جیسون مقدار چت روم آی دی  و یوزر آی دی  پر شود اما در سمت
 سرور نود برای تمام اعضای چت روم (لازم نیست من را در نظر نگیرد به دلیل پرفورمانس) و نیز دیتابیس ارسال شود)

زمان ارسال توسط کلاینت :
این پکت در سه جا (ورود و خروج از چت روم و دریافت مسیج از دیگران در چت روم انلاین(تایپ چت روم به دلیل لزوم اصلاح اوراکل مهم نیست  ))توسط کلاینت ارسال میشود و توسط سرور نود میرور میشود(بدون کش شدن) و به دیتابیس هم داده میشود تا مقدار
seeDate (seenCount)
را در جدول مسیج رسیور برای آن یوزر و آن چت روم اصلاح کند

 در دریافت سمت کلاینت
  موبایل :
  * وقتی این پکت دریافت میشود
 * اگر یوزر آی دی آن خودم هستم باید تعداد unseenCount
 * یوزر خودم را برای آن چت روم اصلاح میکنم و همچنین مقدار بج ها را هم اصلاح کنم
 * اگر یوزر آی دی خودم نیستم
 * و اگر چت روم پرایوت است باید مقدار سین دیت (و سین کانت)همه مسیج های یوزر مقابل را اصلاح کنم تغییرات در UI
 * اتوماتیک اعمال میشود و لازم نیست
 * به آنلاین بودن آن چت روم دقت شود

 وب :
  اگر یوزر آی دی مربوط به خودم نیست و چت روم یک چت روم پرایوت است
 تمام مسیج های آن چت روم دارای مقدار seenDate با تاریخ حاضر شود
  (seenCount) هم اصلاح شود
  اگر چت روم باز است باید ui هم اصلاح شود
 و اگر یوزر آی دی مربوط به خودم است در ui تعداد نخوانده یوزر خودم برای ان چت روم صفر شود

 ضمنا هم در موبایل و هم در وب به محض دریافت پکت مسیج یا مسیج ادیت از یک یوزر باید استیت آن یوزر را آنلاین کنیم
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
بیزنس جدول lastMessage
فقط کافی است که
هر وقت
 در کلاس سرویس رکوردی به جدول مسییج اضافه میشود
 اخرین پیام موجود در جدول مسیج مربوط به ان چت روم که اکتیویتی کایند آن دیلیت نباشد
 به لست مسیج اضافه شود و در صورتی که هیج
 پیامی یافت نشد رکورد ان چت روم را از لست مسیج حذف نماییم
 بنابراین باید به لیستنر  مربوط به اضافه کردن و ویرایش کردن و حذف کردن جدول لست مسیج گوش داد
 بنابراین جدول لست مسیج فقط در زمان دریافت پیام در سرویس به روز میشود و نه در زمان
  اینسرت کردن توسط خود یوزر
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
بیزینس برای تعداد پیام نخوانده در دریافت مسیج:

هر مسیجی که در کلاس سرویس (و نه توسط یوزر ایجاد شود - چون بی معنی است )
دریافت شود اگر مربوط به چت روم آنلاین نیست
و اگر توسط خود ما ارسال نشده است به پیام های نخوانده خودمان در ان چت روم یکی اضافه میکنیم
نیاز به برادکست این تغییر  چت ممبر نیست
چون در نهایت یوزر در دو دیوایس خود تعداد نخوانده های متفاوتی میبیند که پس از ورود به ان چت روم اصلاح میشود
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
بیزینس ورود به چت روم که در خود چت روم مزبور انجام میشود
۱− آن لاین کردن چت روم مزبور
۲−اراسال سینک ادیت پکت
۲−صفر کردن تعداد نخوانده های  خودم برای آن چت روم و
کم کردن از تعداد کل نخوانده های مسیج و اصلاح همه بج ها
لازم نیست که این ویرایش مربوط چت ممبر در خصوص پیام نخوانده به اطلاع همه اعضا برسد
چون در نهایت یوزر در دو دیوایس خود تعداد نخوانده های متفاوتی میبیند که پس از ورود به ان چت روم اصلاح میشود
(به  بخش SYNCMESSAGEEDIT شود)
−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
بیزینس آنلاین شدن وآفلاین شدن:
در زمان اتصال یوزر به سرور نود اگر از تمام دیوایس های آن یوزر فقط یک دیوایس درون سوکت های آنلاین است
پکت آن لاین شدن با کایند SYNCONLINE را برای همه یوزر های آنلاین ارسال میکنیم بدون کش کردن
و در زمان آفلاین شدن سوکت اگر یوزر ما دارای هیچ سوکت آنلاین دیگری نباشد پکت SYNCOFFLINE را برای همه یوزرها بدون کش کردن ارسال نماید
در سمت کلاینت موبایل به محض دریافت هرکدام از این پکت ها که فقط دارای روت بوده و مقدار یوزر آی دی آن هم پر شده است
تمام جدول چت روم ممبر که یوزر ای دی ان برابر بوزر ای دی فوق است را آفلاین یا آنلاین میکنیم

ضمنا هم در موبایل و هم در وب به محض دریافت پکت مسیج(اگر اولد نباشد) یا مسیج ادیت از یک یوزر باید استیت آن یوزر را آنلاین کنیم−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−

بیزینس نوتیفیکیشن ها

در چت روم ممبر دیلیت اگر خودمان دیلیت شده ایم نوتیفیکیشن نشان بده
در چت روم دیلیت نوتیفیکیشن نشان بده
در مسیج اگر چت روم مربوطه آنلاین نیست و مسیج از ما نیست نوتیفیکیشن نشان بده

−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−


 */

/**
 *در این جدول نیازی به
 * b5hcstatusId نیست
 *   همچین در جدول مسیج و ممبر
 *   چون با اکتیویتی استیت و سینک استیت هندل میشود
 *−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−
 * id --->> در ابتدا صفر است و پس از انجام سینک مقدار آی دی از سرور
 * guid --->  جی یو آی دی ولی تاانتها بدون تغییر باقی میماند
 *  * مقدار جی یو آی دی بدون خط فاصله درج شود
 *
 * B5HCChatTypeId : (channel,group,....)  (name can GET from utilCode)
 *
 * syncState ----> from CommonSyncState class
 *
 * activityState ----> from CommonActivityState class
 *
 * oldValue ----> from server
 *
 *  attach :  {attachmentGUID+suffix(fileName),columnNumber,B5HCTypeId} (AttachmentJsonModel.class)
 *
 *  insertDate : توسط یوزر پر شود
 *
 *  ---------------------------------------------------------------------------------------
 *
 *
 *  todo todo todo:
 *
 * هر تغییر در این کلاس به کلاس
 * هم اعمال شود ChatroomAddModel
 * به این دلیل که کلاس فوق در واقع شامل کل فیلد های چت روم است
 * و نیز به آرایه مدل چت روم وب هم منتقل شود
 */
public class ChatroomTable extends RealmObject implements IModels {

    public ChatroomTable() {
        sortDate = new Date().getTime();
    }

    public ChatroomTable(String id, String b5HCChatTypeId,
                         String name, String description, String syncState,
                         String activityState, String oldValue, String attach, String guid,
                         String insertDate) {
        this.id = id;
        B5HCChatTypeId = b5HCChatTypeId;
        this.name = name;
        this.description = description;
        this.syncState = syncState;
        this.activityState = activityState;
        this.oldValue = oldValue;
        this.attach = attach;
        this.guid = guid;
        this.insertDate = insertDate;
        sortDate = new Date().getTime();
    }


    private String name,description,syncState, activityState, oldValue,attach,id,B5HCChatTypeId;

    @PrimaryKey
    private String guid;

    private String insertDate;


    private long sortDate;//for sort max long in java is very bigger than time needed


    public long getSortDate() {
        return sortDate;
    }

    public void setSortDate(long sortDate) {
        this.sortDate = sortDate;
    }

    public String getId() {
        return id== null ? Commons.NULL_INTEGER : id;
    }

    public String getB5HCChatTypeId() {
        return B5HCChatTypeId == null ? Commons.NULL_INTEGER : B5HCChatTypeId;
    }

    public void setId(String id) {
        this.id = id;
    }

    public void setB5HCChatTypeId(String b5HCChatTypeId) {
        B5HCChatTypeId = b5HCChatTypeId;
    }

    public String getInsertDate() {
        return insertDate == null ? Commons.NULL : insertDate;
    }

    public void setInsertDate(String insertDate) {
        this.insertDate = insertDate;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getName() {
        return name == null ? Commons.NULL : name;
    }

    public String getDescription() {
        return description == null ? Commons.NULL : description;
    }

    public String getSyncState() {
        return syncState == null ? CommonSyncState.BEFORE_SYNC : syncState;
    }

    public String getActivityState() {
        return activityState == null ? CommonActivityState.ADD : activityState;
    }

    public String getOldValue() {
        return oldValue == null ? Commons.NULL : oldValue;
    }

    public void setSyncState(String syncState) {
        this.syncState = syncState;
    }

    public void setActivityState(String activityState) {
        this.activityState = activityState;
    }

    public void setOldValue(String oldValue) {
        this.oldValue = oldValue;
    }

    public String getGuid() {
        return guid==null?Commons.NULL:guid;
    }

    public void setGuid(String guid) {
        this.guid = guid;
    }

    public String getAttach() {
        return attach==null?Commons.NULL_ARRAY:attach;
    }

    public void setAttach(String attach) {
        this.attach = attach;
    }

}
